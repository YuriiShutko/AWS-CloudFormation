AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation Sample Template EC2InstanceWithSecurityGroupSample: Create
  an Amazon EC2 instance running the Amazon Linux AMI. The AMI is chosen based
  on the region in which the stack is run. This example creates an EC2 security
  group for the instance to give you SSH access. **WARNING** This template
  creates an Amazon EC2 instance. You will be billed for the AWS resources used
  if you create a stack from this template.
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  InstanceType:
    Description: DevTools EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
    ConstraintDescription: must be a valid EC2 instance type.
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
Mappings:
  AWSInstanceType2Arch:
    t2.micro:
      Arch: HVM64
  AWSInstanceType2NATArch:
    t2.micro:
      Arch: NATHVM64
  AWSRegionArch2AMI:
    eu-central-1:
      HVM64: ami-0b418580298265d5c 
Resources:
  EC2Instance1:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref InstanceType
      SecurityGroups:
        - !Ref InstanceSecurityGroup
      KeyName: !Ref KeyName
      ImageId: !FindInMap 
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - !FindInMap 
          - AWSInstanceType2Arch
          - !Ref InstanceType
          - Arch
      Tags: 
        - 
          Key: "Name"
          Value: "DevTools"
  EC2Instance2:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref InstanceType
      SecurityGroups:
        - !Ref InstanceSecurityGroup
      KeyName: !Ref KeyName
      ImageId: !FindInMap 
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - !FindInMap 
          - AWSInstanceType2Arch
          - !Ref InstanceType
          - Arch
      Tags: 
        - 
          Key: "Name"
          Value: "CI"
  EC2Instance3:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref InstanceType
      SecurityGroups:
        - !Ref InstanceSecurityGroup
      KeyName: !Ref KeyName
      ImageId: !FindInMap 
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - !FindInMap 
          - AWSInstanceType2Arch
          - !Ref InstanceType
          - Arch
      Tags: 
        - 
          Key: "Name"
          Value: "QA"
  InstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable SSH access via port 22 and open port 8080
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref SSHLocation
        - IpProtocol: tcp
          FromPort: '8080'
          ToPort: '8080'
          CidrIp: 0.0.0.0/32
Outputs:
  DevToolsInstanceId:
    Description: InstanceId of the newly created EC2 instance DevTools
    Value: !Ref EC2Instance1
  CIInstanceId:
    Description: InstanceId of the newly created EC2 instance CI
    Value: !Ref EC2Instance2
  QAInstanceId:
    Description: InstanceId of the newly created EC2 instance QA
    Value: !Ref EC2Instance3
    
    
  DevToolsAZ:
    Description: Availability Zone of the newly created EC2 instance DevTools
    Value: !GetAtt 
      - EC2Instance1
      - AvailabilityZone
  CIAZ:
    Description: Availability Zone of the newly created EC2 instance CI
    Value: !GetAtt 
      - EC2Instance2
      - AvailabilityZone
  QAAZ:
    Description: Availability Zone of the newly created EC2 instance QA
    Value: !GetAtt 
      - EC2Instance3
      - AvailabilityZone
      
      
  DevToolsPublicDNS:
    Description: Public DNSName of the newly created EC2 instance DevTools
    Value: !GetAtt 
      - EC2Instance1
      - PublicDnsName
  CIPublicDNS:
    Description: Public DNSName of the newly created EC2 instance CI
    Value: !GetAtt 
      - EC2Instance2
      - PublicDnsName
  QAPublicDNS:
    Description: Public DNSName of the newly created EC2 instance QA
    Value: !GetAtt 
      - EC2Instance3
      - PublicDnsName
      
      
  DevToolsPublicIP:
    Description: Public IP address of the newly created EC2 instance DevTools
    Value: !GetAtt 
      - EC2Instance1
      - PublicIp
  CIPublicIP:
    Description: Public IP address of the newly created EC2 instance CI
    Value: !GetAtt 
      - EC2Instance2
      - PublicIp
  QAPublicIP:
    Description: Public IP address of the newly created EC2 instance QA
    Value: !GetAtt 
      - EC2Instance3
      - PublicIp
